from sqlalchemy import create_engine, select
from sqlalchemy import MetaData, Table
from sqlalchemy import Column
from sqlalchemy import Integer, String
from sqlalchemy.orm import sessionmaker
import csv

dbPath = 'C://py//datafile2.db'
engine = create_engine("sqlite+pysqlite:///:memory:", echo=True)
metadata = MetaData()

people  = Table('people', metadata,
                Column('id', Integer, primary_key=True),
                Column('product', String),
                Column('cost', Integer),
                Column('sale', Integer),
                Column('profit', Integer),
                )

Session = sessionmaker(bind=engine)
session = Session()
metadata.create_all(engine)

product_info = {'product': 'Lemon', 'cost': 1, 'sale': 3}
product_info['profit'] = product_info['sale'] - product_info['cost']
people_ins = people.insert().values(**product_info)
session.execute(people_ins)
session.commit()

# adding multiple records
products = [
    {'product': 'Grapefruit', 'cost': 15, 'sale': 20},
    {'product': 'Mandarin', 'cost': 10, 'sale': 70}
]

for product in products:
    product['profit'] = product['sale'] - product['cost']

session.execute(people.insert(), products)
session.commit()

# database collection
result = session.execute(select(people))
for row in result:
    print(row)

# way saved CSV
csv_file_path = 'C://py//people_data.csv'

# `people` building the datebase among sheet 'people'
result = session.execute(select(people))
rows = result.fetchall()

# saving results CSV
with open(csv_file_path, 'w', newline='', encoding='utf-8') as csv_file:
    csv_writer = csv.writer(csv_file)
    # writing headers
    csv_writer.writerow([column.name for column in people.columns])
    # writing strings
    for row in rows:
        csv_writer.writerow(row)

print(f"Complite {csv_file_path}")
